<?php
/** @file
 *
 * ScaffoldNewBundle is a BaseFortissimoCommand class.
 *
 * Created by Matt Butcher on 2011-06-15.
 */

/**
 * Scaffold a new bundle.
 *
 * This programmatically creates a new bundle. Since this creates not only
 * files and directories, but actually executable files, it should be used
 * with extreme caution. It is recommended that this be used with `fort`
 * and similar CLI programs, but not from within the webapp.
 *
 * Note that whatever user executes PHP will need to have write permissions to bundles/
 * in order for this to work.
 *
 * @author Matt Butcher
 */
class ScaffoldNewBundle extends BaseFortissimoCommand {

  public function expects() {
    return $this
      ->description('Create a new bundle')
      ->usesParam('name', 'The name of the new bundle to create.')
      ->withFilter('string')
      ->whichIsRequired()
      
      ->andReturns('Boolean value indicating success (TRUE) or failure (FALSE)')
    ;
  }

  public function doCommand() {
    
    $bundleName = $this->param('name');
    if (empty($bundleName)) {
      throw new \Villain\IntteruptException('Bundle name cannot be empty.');
    }
    
    if (!Bundle::isValidName($bundleName)) {
      throw new \Villain\IntteruptException('Illegal bundle name.');
    }
    
    $path = $this->createBundleDirectory($name);
    $this->createBundleSubdirectories($path);
    $this->createBundlePHP($path, $name);
    

    return TRUE;
  }
  
  protected function createBundleDirectory($name) {
    $path = Bundle::DIR . $name;
    if (!is_dir(Bundle::DIR)) {
      throw new \Villain\IntteruptException('No bundle directory found at ' . Bundle::DIR);
    }
    
    if (!is_writable(Bundle::DIR)) {
      throw new \Villain\IntteruptException('Permission error: Cannot write to ' . Bundle::DIR);
    }
    
    if (file_exists($path)) {
      throw new \Villain\IntteruptException('Bundle already exists at ' . $path);
    }
    
    mkdir($path);
    
    return $path;
  }
  
  protected function createBundleSubdirectories($path) {
    mkdir($path . '/src');
    mkdir($path . '/test');
    mkdir($path . '/doc');
    mkdir($path . '/media');
    mkdir($path . '/media/css');
    mkdir($path . '/media/img');
    mkdir($path . '/media/css');
  }
  
  protected function createBundlePHP($path, $name) {
    $code = sprintf('Bundle::create("%s")->description("Autogenerated by %s")->version("1.0.0");', $name, __CLASS__);
    $f = fopen($path . '/bundle.php', 'w');
    fwrite($f, 'use \Villain\Bundles\Bundle;');
    fwrite($f, $code);
    fclose($f);
  }
}

